{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { parse } from 'svg-parser'\nimport hastToBabelAst from '@svgr/hast-util-to-babel-ast'\nimport { transformFromAstSync, createConfigItem } from '@babel/core'\nimport svgrBabelPreset, {\n  Options as SvgrPresetOptions,\n} from '@svgr/babel-preset'\nimport type { Plugin, Config } from '@svgr/core'\n\nconst getJsxRuntimeOptions = (config: Config): Partial<SvgrPresetOptions> => {\n  switch (config.jsxRuntime) {\n    case null:\n    case undefined:\n    case 'classic':\n      return {\n        jsxRuntime: 'classic',\n        importSource: 'react',\n        jsxRuntimeImport: { namespace: 'React', source: 'react' },\n      }\n    case 'classic-preact':\n      return {\n        jsxRuntime: 'classic',\n        importSource: 'preact/compat',\n        jsxRuntimeImport: { specifiers: ['h'], source: 'preact' },\n      }\n    case 'automatic':\n      return { jsxRuntime: 'automatic' }\n    default:\n      throw new Error(`Unsupported \"jsxRuntime\" \"${config.jsxRuntime}\"`)\n  }\n}\n\nconst jsxPlugin: Plugin = (code, config, state) => {\n  const filePath = state.filePath || 'unknown'\n  const hastTree = parse(code)\n\n  const babelTree = hastToBabelAst(hastTree)\n\n  const svgPresetOptions: SvgrPresetOptions = {\n    ref: config.ref,\n    titleProp: config.titleProp,\n    expandProps: config.expandProps,\n    dimensions: config.dimensions,\n    icon: config.icon,\n    native: config.native,\n    svgProps: config.svgProps,\n    replaceAttrValues: config.replaceAttrValues,\n    typescript: config.typescript,\n    template: config.template,\n    memo: config.memo,\n    exportType: config.exportType,\n    namedExport: config.namedExport,\n    ...getJsxRuntimeOptions(config),\n    state,\n  }\n\n  const result = transformFromAstSync(babelTree, code, {\n    caller: {\n      name: 'svgr',\n    },\n    presets: [\n      createConfigItem([svgrBabelPreset, svgPresetOptions], {\n        type: 'preset',\n      }),\n    ],\n    filename: filePath,\n    babelrc: false,\n    configFile: false,\n    code: true,\n    ast: false,\n    // @ts-ignore\n    inputSourceMap: false,\n    ...(config.jsx && config.jsx.babelConfig),\n  })\n\n  if (!result?.code) {\n    throw new Error(`Unable to generate SVG file`)\n  }\n\n  return result.code\n}\n\nexport default jsxPlugin\n"],"names":["parse","hastToBabelAst","transformFromAstSync","createConfigItem","svgrBabelPreset"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,MAAM,uBAAuB,CAAC,WAA+C;AAC3E,UAAQ,OAAO;AAAA,SACR;AAAA,SACA;AAAA,SACA;AACH,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,kBAAkB,EAAE,WAAW,SAAS,QAAQ;AAAA;AAAA,SAE/C;AACH,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,kBAAkB,EAAE,YAAY,CAAC,MAAM,QAAQ;AAAA;AAAA,SAE9C;AACH,aAAO,EAAE,YAAY;AAAA;AAErB,YAAM,IAAI,MAAM,6BAA6B,OAAO;AAAA;AAAA;MAIpD,YAAoB,CAAC,MAAM,QAAQ,UAAU;AACjD,QAAM,WAAW,MAAM,YAAY;AACnC,QAAM,WAAWA,gBAAM;AAEvB,QAAM,YAAYC,mCAAe;AAEjC,QAAM,mBAAsC;AAAA,IAC1C,KAAK,OAAO;AAAA,IACZ,WAAW,OAAO;AAAA,IAClB,aAAa,OAAO;AAAA,IACpB,YAAY,OAAO;AAAA,IACnB,MAAM,OAAO;AAAA,IACb,QAAQ,OAAO;AAAA,IACf,UAAU,OAAO;AAAA,IACjB,mBAAmB,OAAO;AAAA,IAC1B,YAAY,OAAO;AAAA,IACnB,UAAU,OAAO;AAAA,IACjB,MAAM,OAAO;AAAA,IACb,YAAY,OAAO;AAAA,IACnB,aAAa,OAAO;AAAA,KACjB,qBAAqB,UAdkB;AAAA,IAe1C;AAAA;AAGF,QAAM,SAASC,0BAAqB,WAAW,MAAM;AAAA,IACnD,QAAQ;AAAA,MACN,MAAM;AAAA;AAAA,IAER,SAAS;AAAA,MACPC,sBAAiB,CAACC,qCAAiB,mBAAmB;AAAA,QACpD,MAAM;AAAA;AAAA;AAAA,IAGV,UAAU;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,MAAM;AAAA,IACN,KAAK;AAAA,IAEL,gBAAgB;AAAA,KACZ,OAAO,OAAO,OAAO,IAAI;AAG/B,MAAI,mCAAS,OAAM;AACjB,UAAM,IAAI,MAAM;AAAA;AAGlB,SAAO,OAAO;AAAA;;;;"}