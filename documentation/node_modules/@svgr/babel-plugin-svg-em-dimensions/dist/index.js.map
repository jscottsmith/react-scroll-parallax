{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { types as t, NodePath, ConfigAPI } from '@babel/core'\n\nconst elements = ['svg', 'Svg']\n\nexport interface Options {\n  width: number | string\n  height: number | string\n}\n\nconst getValue = (raw: undefined | number | string) => {\n  if (raw === undefined) return t.stringLiteral('1em')\n  switch (typeof raw) {\n    case 'number':\n      return t.jsxExpressionContainer(t.numericLiteral(raw))\n    case 'string':\n      return t.stringLiteral(raw)\n    default:\n      return t.stringLiteral('1em')\n  }\n}\n\nconst plugin = (_: ConfigAPI, opts: Options) => ({\n  visitor: {\n    JSXOpeningElement(path: NodePath<t.JSXOpeningElement>) {\n      if (\n        !elements.some((element) =>\n          path.get('name').isJSXIdentifier({ name: element }),\n        )\n      )\n        return\n\n      const values = {\n        width: getValue(opts.width),\n        height: getValue(opts.height),\n      }\n      const requiredAttributes = Object.keys(values)\n\n      path.get('attributes').forEach((attributePath) => {\n        if (!attributePath.isJSXAttribute()) return\n        const namePath = attributePath.get('name')\n        if (!namePath.isJSXIdentifier()) return\n        const index = requiredAttributes.indexOf(namePath.node.name)\n\n        if (index === -1) return\n\n        const valuePath = attributePath.get('value')\n        valuePath.replaceWith(values[namePath.node.name as 'width' | 'height'])\n        requiredAttributes.splice(index, 1)\n      })\n\n      path.pushContainer(\n        'attributes',\n        requiredAttributes.map((attr) =>\n          t.jsxAttribute(\n            t.jsxIdentifier(attr),\n            values[attr as 'width' | 'height'],\n          ),\n        ),\n      )\n    },\n  },\n})\n\nexport default plugin\n"],"names":["t"],"mappings":";;;;AAGA,MAAM,WAAW,CAAC,OAAO;AAOzB,MAAM,WAAW,CAAC,QAAqC;AACrD,MAAI,QAAQ;AAAW,WAAOA,WAAE,cAAc;AAC9C,UAAQ,OAAO;AAAA,SACR;AACH,aAAOA,WAAE,uBAAuBA,WAAE,eAAe;AAAA,SAC9C;AACH,aAAOA,WAAE,cAAc;AAAA;AAEvB,aAAOA,WAAE,cAAc;AAAA;AAAA;MAIvB,SAAS,CAAC,GAAc;AAAmB,EAC/C,SAAS;AAAA,IACP,kBAAkB,MAAqC;AACrD,UACE,CAAC,SAAS,KAAK,CAAC,YACd,KAAK,IAAI,QAAQ,gBAAgB,EAAE,MAAM;AAG3C;AAEF,YAAM,SAAS;AAAA,QACb,OAAO,SAAS,KAAK;AAAA,QACrB,QAAQ,SAAS,KAAK;AAAA;AAExB,YAAM,qBAAqB,OAAO,KAAK;AAEvC,WAAK,IAAI,cAAc,QAAQ,CAAC,kBAAkB;AAChD,YAAI,CAAC,cAAc;AAAkB;AACrC,cAAM,WAAW,cAAc,IAAI;AACnC,YAAI,CAAC,SAAS;AAAmB;AACjC,cAAM,QAAQ,mBAAmB,QAAQ,SAAS,KAAK;AAEvD,YAAI,UAAU;AAAI;AAElB,cAAM,YAAY,cAAc,IAAI;AACpC,kBAAU,YAAY,OAAO,SAAS,KAAK;AAC3C,2BAAmB,OAAO,OAAO;AAAA;AAGnC,WAAK,cACH,cACA,mBAAmB,IAAI,CAAC,SACtBA,WAAE,aACAA,WAAE,cAAc,OAChB,OAAO;AAAA;AAAA;AAAA;;;;"}