{"version":3,"file":"react-sizeme.js","sources":["../src/resize-detector.js","../src/with-size.js","../src/component.js","../src/index.js"],"sourcesContent":["import createResizeDetector from 'element-resize-detector'\n\nconst instances = {}\n\n// Lazily require to not cause bug\n// https://github.com/ctrlplusb/react-sizeme/issues/6\nfunction resizeDetector(strategy = 'scroll') {\n  if (!instances[strategy]) {\n    instances[strategy] = createResizeDetector({\n      strategy,\n    })\n  }\n\n  return instances[strategy]\n}\n\nexport default resizeDetector\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-find-dom-node */\n\nimport React, { Children, Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport invariant from 'invariant'\nimport { debounce, throttle } from 'throttle-debounce'\nimport resizeDetector from './resize-detector'\n\nconst errMsg =\n  'react-sizeme: an error occurred whilst stopping to listen to node size changes'\n\nconst defaultConfig = {\n  monitorWidth: true,\n  monitorHeight: false,\n  refreshRate: 16,\n  refreshMode: 'throttle',\n  noPlaceholder: false,\n  resizeDetectorStrategy: 'scroll',\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\n/**\n * This is a utility wrapper component that will allow our higher order\n * component to get a ref handle on our wrapped components html.\n * @see https://gist.github.com/jimfb/32b587ee6177665fb4cf\n */\nclass ReferenceWrapper extends Component {\n  static displayName = 'SizeMeReferenceWrapper'\n\n  render() {\n    return Children.only(this.props.children)\n  }\n}\n\nfunction Placeholder({ className, style }) {\n  // Lets create the props for the temp element.\n  const phProps = {}\n\n  // We will use any provided className/style or else make the temp\n  // container take the full available space.\n  if (!className && !style) {\n    phProps.style = { width: '100%', height: '100%' }\n  } else {\n    if (className) {\n      phProps.className = className\n    }\n    if (style) {\n      phProps.style = style\n    }\n  }\n\n  return <div {...phProps} />\n}\nPlaceholder.displayName = 'SizeMePlaceholder'\n\n/**\n * As we need to maintain a ref on the root node that is rendered within our\n * SizeMe component we need to wrap our entire render in a sub component.\n * Without this, we lose the DOM ref after the placeholder is removed from\n * the render and the actual component is rendered.\n * It took me forever to figure this out, so tread extra careful on this one!\n */\nconst renderWrapper = (WrappedComponent) => {\n  function SizeMeRenderer(props) {\n    const {\n      explicitRef,\n      className,\n      style,\n      size,\n      disablePlaceholder,\n      onSize,\n      ...restProps\n    } = props\n\n    const noSizeData =\n      size == null || (size.width == null && size.height == null)\n\n    const renderPlaceholder = noSizeData && !disablePlaceholder\n\n    const renderProps = {\n      className,\n      style,\n    }\n\n    if (size != null) {\n      renderProps.size = size\n    }\n\n    const toRender = renderPlaceholder ? (\n      <Placeholder className={className} style={style} />\n    ) : (\n      <WrappedComponent {...renderProps} {...restProps} />\n    )\n\n    return <ReferenceWrapper ref={explicitRef}>{toRender}</ReferenceWrapper>\n  }\n\n  SizeMeRenderer.displayName = `SizeMeRenderer(${getDisplayName(\n    WrappedComponent,\n  )})`\n\n  return SizeMeRenderer\n}\n\n/**\n * :: config -> Component -> WrappedComponent\n *\n * Higher order component that allows the wrapped component to become aware\n * of it's size, by receiving it as an object within it's props.\n *\n * @param  monitorWidth\n *   Default true, whether changes in the element's width should be monitored,\n *   causing a size property to be broadcast.\n * @param  monitorHeight\n *   Default false, whether changes in the element's height should be monitored,\n *   causing a size property to be broadcast.\n *\n * @return The wrapped component.\n */\nfunction withSize(config = defaultConfig) {\n  const {\n    monitorWidth = defaultConfig.monitorWidth,\n    monitorHeight = defaultConfig.monitorHeight,\n    refreshRate = defaultConfig.refreshRate,\n    refreshMode = defaultConfig.refreshMode,\n    noPlaceholder = defaultConfig.noPlaceholder,\n    resizeDetectorStrategy = defaultConfig.resizeDetectorStrategy,\n  } = config\n\n  invariant(\n    monitorWidth || monitorHeight,\n    'You have to monitor at least one of the width or height when using \"sizeMe\"',\n  )\n\n  invariant(\n    refreshRate >= 16,\n    \"It is highly recommended that you don't put your refreshRate lower than \" +\n      '16 as this may cause layout thrashing.',\n  )\n\n  invariant(\n    refreshMode === 'throttle' || refreshMode === 'debounce',\n    'The refreshMode should have a value of \"throttle\" or \"debounce\"',\n  )\n\n  const refreshDelayStrategy = refreshMode === 'throttle' ? throttle : debounce\n\n  return function WrapComponent(WrappedComponent) {\n    const SizeMeRenderWrapper = renderWrapper(WrappedComponent)\n\n    class SizeAwareComponent extends React.Component {\n      static displayName = `SizeMe(${getDisplayName(WrappedComponent)})`\n\n      domEl = null\n\n      state = {\n        width: undefined,\n        height: undefined,\n      }\n\n      componentDidMount() {\n        this.detector = resizeDetector(resizeDetectorStrategy)\n        this.determineStrategy(this.props)\n        this.handleDOMNode()\n      }\n\n      componentDidUpdate() {\n        this.determineStrategy(this.props)\n        this.handleDOMNode()\n      }\n\n      componentWillUnmount() {\n        // Change our size checker to a noop just in case we have some\n        // late running events.\n        this.hasSizeChanged = () => undefined\n        this.checkIfSizeChanged = () => undefined\n        this.uninstall()\n      }\n\n      uninstall = () => {\n        if (this.domEl) {\n          try {\n            this.detector.uninstall(this.domEl)\n          } catch (err) {\n            // eslint-disable-next-line no-console\n            console.warn(errMsg)\n          }\n          this.domEl = null\n        }\n      }\n\n      determineStrategy = (props) => {\n        if (props.onSize) {\n          if (!this.callbackState) {\n            this.callbackState = {\n              ...this.state,\n            }\n          }\n          this.strategy = 'callback'\n        } else {\n          this.strategy = 'render'\n        }\n      }\n\n      strategisedSetState = (state) => {\n        if (this.strategy === 'callback') {\n          this.callbackState = state\n          this.props.onSize(state)\n        }\n        this.setState(state)\n      }\n\n      strategisedGetState = () =>\n        this.strategy === 'callback' ? this.callbackState : this.state\n\n      handleDOMNode() {\n        const found = this.element && ReactDOM.findDOMNode(this.element)\n\n        if (!found) {\n          // If we previously had a dom node then we need to ensure that\n          // we remove any existing listeners to avoid memory leaks.\n          this.uninstall()\n          return\n        }\n\n        if (!this.domEl) {\n          this.domEl = found\n          this.detector.listenTo(this.domEl, this.checkIfSizeChanged)\n        } else if (\n          (this.domEl.isSameNode && !this.domEl.isSameNode(found)) ||\n          this.domEl !== found\n        ) {\n          this.uninstall()\n          this.domEl = found\n          this.detector.listenTo(this.domEl, this.checkIfSizeChanged)\n        } else {\n          // Do nothing 👍\n        }\n      }\n\n      refCallback = (element) => {\n        this.element = element\n      }\n\n      hasSizeChanged = (current, next) => {\n        const c = current\n        const n = next\n\n        return (\n          (monitorWidth && c.width !== n.width) ||\n          (monitorHeight && c.height !== n.height)\n        )\n      }\n\n      checkIfSizeChanged = refreshDelayStrategy(refreshRate, (el) => {\n        const { width, height } = el.getBoundingClientRect()\n\n        const next = {\n          width: monitorWidth ? width : null,\n          height: monitorHeight ? height : null,\n        }\n\n        if (this.hasSizeChanged(this.strategisedGetState(), next)) {\n          this.strategisedSetState(next)\n        }\n      })\n\n      render() {\n        const disablePlaceholder =\n          withSize.enableSSRBehaviour ||\n          withSize.noPlaceholders ||\n          noPlaceholder ||\n          this.strategy === 'callback'\n\n        const size = { ...this.state }\n\n        return (\n          <SizeMeRenderWrapper\n            explicitRef={this.refCallback}\n            size={this.strategy === 'callback' ? null : size}\n            disablePlaceholder={disablePlaceholder}\n            {...this.props}\n          />\n        )\n      }\n    }\n\n    SizeAwareComponent.WrappedComponent = WrappedComponent\n\n    return SizeAwareComponent\n  }\n}\n\n/**\n * Allow SizeMe to run within SSR environments.  This is a \"global\" behaviour\n * flag that should be set within the initialisation phase of your application.\n *\n * Warning: don't set this flag unless you need to as using it may cause\n * extra render cycles to happen within your components depending on the logic\n * contained within them around the usage of the `size` data.\n *\n * DEPRECATED: Please use the global noPlaceholders\n */\nwithSize.enableSSRBehaviour = false\n\n/**\n * Global configuration allowing to disable placeholder rendering for all\n * sizeMe components.\n */\nwithSize.noPlaceholders = false\n\nexport default withSize\n","/* eslint-disable react/prop-types */\n\nimport React, { Component } from 'react'\nimport isShallowEqual from 'shallowequal'\nimport withSize from './with-size'\n\nexport default class SizeMe extends Component {\n  static defaultProps = {\n    children: undefined,\n    render: undefined,\n  }\n\n  constructor(props) {\n    super(props)\n    const { children, render, ...sizeMeConfig } = props\n    this.createComponent(sizeMeConfig)\n    this.state = {\n      size: {\n        width: undefined,\n        height: undefined,\n      },\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      children: prevChildren,\n      render: prevRender,\n      ...currentSizeMeConfig\n    } = this.props\n    const {\n      children: nextChildren,\n      render: nextRender,\n      ...prevSizeMeConfig\n    } = prevProps\n    if (!isShallowEqual(currentSizeMeConfig, prevSizeMeConfig)) {\n      this.createComponent(currentSizeMeConfig)\n    }\n  }\n\n  createComponent = (config) => {\n    this.SizeAware = withSize(config)(({ children }) => children)\n  }\n\n  onSize = (size) => this.setState({ size })\n\n  render() {\n    const { SizeAware } = this\n    const render = this.props.children || this.props.render\n    return (\n      <SizeAware onSize={this.onSize}>\n        {render({ size: this.state.size })}\n      </SizeAware>\n    )\n  }\n}\n","import withSize from './with-size'\nimport SizeMe from './component'\n\nwithSize.SizeMe = SizeMe\nwithSize.withSize = withSize\n\nexport default withSize\n"],"names":["instances","resizeDetector","strategy","createResizeDetector","errMsg","defaultConfig","monitorWidth","monitorHeight","refreshRate","refreshMode","noPlaceholder","resizeDetectorStrategy","getDisplayName","WrappedComponent","displayName","name","ReferenceWrapper","Children","only","props","children","Component","Placeholder","className","style","phProps","width","height","React","renderWrapper","SizeMeRenderer","explicitRef","size","disablePlaceholder","onSize","restProps","noSizeData","renderPlaceholder","renderProps","toRender","withSize","config","invariant","refreshDelayStrategy","throttle","debounce","WrapComponent","SizeMeRenderWrapper","SizeAwareComponent","undefined","domEl","detector","uninstall","err","console","warn","callbackState","state","setState","element","current","next","c","n","el","getBoundingClientRect","hasSizeChanged","strategisedGetState","strategisedSetState","determineStrategy","handleDOMNode","checkIfSizeChanged","found","ReactDOM","findDOMNode","listenTo","isSameNode","enableSSRBehaviour","noPlaceholders","refCallback","SizeMe","SizeAware","render","sizeMeConfig","createComponent","prevProps","currentSizeMeConfig","prevSizeMeConfig","isShallowEqual"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG,EAAlB;AAGA;;AACA,SAASC,cAAT,GAA6C;AAAA,MAArBC,QAAqB,uEAAV,QAAU;;AAC3C,MAAI,CAACF,SAAS,CAACE,QAAD,CAAd,EAA0B;AACxBF,IAAAA,SAAS,CAACE,QAAD,CAAT,GAAsBC,wCAAoB,CAAC;AACzCD,MAAAA,QAAQ,EAARA;AADyC,KAAD,CAA1C;AAGD;;AAED,SAAOF,SAAS,CAACE,QAAD,CAAhB;AACD;;;ACHD,IAAME,MAAM,GACV,gFADF;AAGA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,YAAY,EAAE,IADM;AAEpBC,EAAAA,aAAa,EAAE,KAFK;AAGpBC,EAAAA,WAAW,EAAE,EAHO;AAIpBC,EAAAA,WAAW,EAAE,UAJO;AAKpBC,EAAAA,aAAa,EAAE,KALK;AAMpBC,EAAAA,sBAAsB,EAAE;AANJ,CAAtB;;AASA,SAASC,cAAT,CAAwBC,gBAAxB,EAA0C;AACxC,SAAOA,gBAAgB,CAACC,WAAjB,IAAgCD,gBAAgB,CAACE,IAAjD,IAAyD,WAAhE;AACD;AAED;AACA;AACA;AACA;AACA;;;IACMC;;;;;;;;;;;;;WAGJ,kBAAS;AACP,aAAOC,cAAQ,CAACC,IAAT,CAAc,KAAKC,KAAL,CAAWC,QAAzB,CAAP;AACD;;;;EAL4BC;;gBAAzBL,iCACiB;;AAOvB,SAASM,WAAT,OAA2C;AAAA,MAApBC,SAAoB,QAApBA,SAAoB;AAAA,MAATC,KAAS,QAATA,KAAS;AACzC;AACA,MAAMC,OAAO,GAAG,EAAhB,CAFyC;AAKzC;;AACA,MAAI,CAACF,SAAD,IAAc,CAACC,KAAnB,EAA0B;AACxBC,IAAAA,OAAO,CAACD,KAAR,GAAgB;AAAEE,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAhB;AACD,GAFD,MAEO;AACL,QAAIJ,SAAJ,EAAe;AACbE,MAAAA,OAAO,CAACF,SAAR,GAAoBA,SAApB;AACD;;AACD,QAAIC,KAAJ,EAAW;AACTC,MAAAA,OAAO,CAACD,KAAR,GAAgBA,KAAhB;AACD;AACF;;AAED,sBAAOI,+CAASH,OAAT,CAAP;AACD;;AACDH,WAAW,CAACR,WAAZ,GAA0B,mBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMe,aAAa,GAAG,SAAhBA,aAAgB,CAAChB,gBAAD,EAAsB;AAC1C,WAASiB,cAAT,CAAwBX,KAAxB,EAA+B;AAC7B,QACEY,WADF,GAQIZ,KARJ,CACEY,WADF;AAAA,QAEER,SAFF,GAQIJ,KARJ,CAEEI,SAFF;AAAA,QAGEC,KAHF,GAQIL,KARJ,CAGEK,KAHF;AAAA,QAIEQ,IAJF,GAQIb,KARJ,CAIEa,IAJF;AAAA,QAKEC,kBALF,GAQId,KARJ,CAKEc,kBALF;AAAA,QAQId,KARJ,CAMEe,MANF;AAAA,YAOKC,SAPL,4BAQIhB,KARJ;;AAUA,QAAMiB,UAAU,GACdJ,IAAI,IAAI,IAAR,IAAiBA,IAAI,CAACN,KAAL,IAAc,IAAd,IAAsBM,IAAI,CAACL,MAAL,IAAe,IADxD;AAGA,QAAMU,iBAAiB,GAAGD,UAAU,IAAI,CAACH,kBAAzC;AAEA,QAAMK,WAAW,GAAG;AAClBf,MAAAA,SAAS,EAATA,SADkB;AAElBC,MAAAA,KAAK,EAALA;AAFkB,KAApB;;AAKA,QAAIQ,IAAI,IAAI,IAAZ,EAAkB;AAChBM,MAAAA,WAAW,CAACN,IAAZ,GAAmBA,IAAnB;AACD;;AAED,QAAMO,QAAQ,GAAGF,iBAAiB,gBAChCT,wCAAC,WAAD;AAAa,MAAA,SAAS,EAAEL,SAAxB;AAAmC,MAAA,KAAK,EAAEC;AAA1C,MADgC,gBAGhCI,wCAAC,gBAAD,eAAsBU,WAAtB,EAAuCH,SAAvC,EAHF;AAMA,wBAAOP,wCAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEG;AAAvB,OAAqCQ,QAArC,CAAP;AACD;;AAEDT,EAAAA,cAAc,CAAChB,WAAf,4BAA+CF,cAAc,CAC3DC,gBAD2D,CAA7D;AAIA,SAAOiB,cAAP;AACD,CAxCD;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASU,QAAT,GAA0C;AAAA,MAAxBC,MAAwB,uEAAfpC,aAAe;AACxC,6BAOIoC,MAPJ,CACEnC,YADF;AAAA,MACEA,YADF,qCACiBD,aAAa,CAACC,YAD/B;AAAA,8BAOImC,MAPJ,CAEElC,aAFF;AAAA,MAEEA,aAFF,sCAEkBF,aAAa,CAACE,aAFhC;AAAA,4BAOIkC,MAPJ,CAGEjC,WAHF;AAAA,MAGEA,WAHF,oCAGgBH,aAAa,CAACG,WAH9B;AAAA,4BAOIiC,MAPJ,CAIEhC,WAJF;AAAA,MAIEA,WAJF,oCAIgBJ,aAAa,CAACI,WAJ9B;AAAA,8BAOIgC,MAPJ,CAKE/B,aALF;AAAA,MAKEA,aALF,sCAKkBL,aAAa,CAACK,aALhC;AAAA,8BAOI+B,MAPJ,CAME9B,sBANF;AAAA,MAMEA,sBANF,sCAM2BN,aAAa,CAACM,sBANzC;AASA+B,EAAAA,6BAAS,CACPpC,YAAY,IAAIC,aADT,EAEP,6EAFO,CAAT;AAKAmC,EAAAA,6BAAS,CACPlC,WAAW,IAAI,EADR,EAEP,6EACE,wCAHK,CAAT;AAMAkC,EAAAA,6BAAS,CACPjC,WAAW,KAAK,UAAhB,IAA8BA,WAAW,KAAK,UADvC,EAEP,iEAFO,CAAT;AAKA,MAAMkC,oBAAoB,GAAGlC,WAAW,KAAK,UAAhB,GAA6BmC,yBAA7B,GAAwCC,yBAArE;AAEA,SAAO,SAASC,aAAT,CAAuBjC,gBAAvB,EAAyC;AAC9C,QAAMkC,mBAAmB,GAAGlB,aAAa,CAAChB,gBAAD,CAAzC;;AAD8C,QAGxCmC,kBAHwC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,gEAMpC,IANoC;;AAAA,gEAQpC;AACNtB,UAAAA,KAAK,EAAEuB,SADD;AAENtB,UAAAA,MAAM,EAAEsB;AAFF,SARoC;;AAAA,oEAgChC,YAAM;AAChB,cAAI,MAAKC,KAAT,EAAgB;AACd,gBAAI;AACF,oBAAKC,QAAL,CAAcC,SAAd,CAAwB,MAAKF,KAA7B;AACD,aAFD,CAEE,OAAOG,GAAP,EAAY;AACZ;AACAC,cAAAA,OAAO,CAACC,IAAR,CAAanD,MAAb;AACD;;AACD,kBAAK8C,KAAL,GAAa,IAAb;AACD;AACF,SA1C2C;;AAAA,4EA4CxB,UAAC/B,KAAD,EAAW;AAC7B,cAAIA,KAAK,CAACe,MAAV,EAAkB;AAChB,gBAAI,CAAC,MAAKsB,aAAV,EAAyB;AACvB,oBAAKA,aAAL,sBACK,MAAKC,KADV;AAGD;;AACD,kBAAKvD,QAAL,GAAgB,UAAhB;AACD,WAPD,MAOO;AACL,kBAAKA,QAAL,GAAgB,QAAhB;AACD;AACF,SAvD2C;;AAAA,8EAyDtB,UAACuD,KAAD,EAAW;AAC/B,cAAI,MAAKvD,QAAL,KAAkB,UAAtB,EAAkC;AAChC,kBAAKsD,aAAL,GAAqBC,KAArB;;AACA,kBAAKtC,KAAL,CAAWe,MAAX,CAAkBuB,KAAlB;AACD;;AACD,gBAAKC,QAAL,CAAcD,KAAd;AACD,SA/D2C;;AAAA,8EAiEtB;AAAA,iBACpB,MAAKvD,QAAL,KAAkB,UAAlB,GAA+B,MAAKsD,aAApC,GAAoD,MAAKC,KADrC;AAAA,SAjEsB;;AAAA,sEA6F9B,UAACE,OAAD,EAAa;AACzB,gBAAKA,OAAL,GAAeA,OAAf;AACD,SA/F2C;;AAAA,yEAiG3B,UAACC,OAAD,EAAUC,IAAV,EAAmB;AAClC,cAAMC,CAAC,GAAGF,OAAV;AACA,cAAMG,CAAC,GAAGF,IAAV;AAEA,iBACGvD,YAAY,IAAIwD,CAAC,CAACpC,KAAF,KAAYqC,CAAC,CAACrC,KAA/B,IACCnB,aAAa,IAAIuD,CAAC,CAACnC,MAAF,KAAaoC,CAAC,CAACpC,MAFnC;AAID,SAzG2C;;AAAA,6EA2GvBgB,oBAAoB,CAACnC,WAAD,EAAc,UAACwD,EAAD,EAAQ;AAC7D,sCAA0BA,EAAE,CAACC,qBAAH,EAA1B;AAAA,cAAQvC,KAAR,yBAAQA,KAAR;AAAA,cAAeC,MAAf,yBAAeA,MAAf;;AAEA,cAAMkC,IAAI,GAAG;AACXnC,YAAAA,KAAK,EAAEpB,YAAY,GAAGoB,KAAH,GAAW,IADnB;AAEXC,YAAAA,MAAM,EAAEpB,aAAa,GAAGoB,MAAH,GAAY;AAFtB,WAAb;;AAKA,cAAI,MAAKuC,cAAL,CAAoB,MAAKC,mBAAL,EAApB,EAAgDN,IAAhD,CAAJ,EAA2D;AACzD,kBAAKO,mBAAL,CAAyBP,IAAzB;AACD;AACF,SAXwC,CA3GG;;AAAA;AAAA;;AAAA;AAAA;AAAA,eAa5C,6BAAoB;AAClB,eAAKV,QAAL,GAAgBlD,cAAc,CAACU,sBAAD,CAA9B;AACA,eAAK0D,iBAAL,CAAuB,KAAKlD,KAA5B;AACA,eAAKmD,aAAL;AACD;AAjB2C;AAAA;AAAA,eAmB5C,8BAAqB;AACnB,eAAKD,iBAAL,CAAuB,KAAKlD,KAA5B;AACA,eAAKmD,aAAL;AACD;AAtB2C;AAAA;AAAA,eAwB5C,gCAAuB;AACrB;AACA;AACA,eAAKJ,cAAL,GAAsB;AAAA,mBAAMjB,SAAN;AAAA,WAAtB;;AACA,eAAKsB,kBAAL,GAA0B;AAAA,mBAAMtB,SAAN;AAAA,WAA1B;;AACA,eAAKG,SAAL;AACD;AA9B2C;AAAA;AAAA,eAoE5C,yBAAgB;AACd,cAAMoB,KAAK,GAAG,KAAKb,OAAL,IAAgBc,4BAAQ,CAACC,WAAT,CAAqB,KAAKf,OAA1B,CAA9B;;AAEA,cAAI,CAACa,KAAL,EAAY;AACV;AACA;AACA,iBAAKpB,SAAL;AACA;AACD;;AAED,cAAI,CAAC,KAAKF,KAAV,EAAiB;AACf,iBAAKA,KAAL,GAAasB,KAAb;AACA,iBAAKrB,QAAL,CAAcwB,QAAd,CAAuB,KAAKzB,KAA5B,EAAmC,KAAKqB,kBAAxC;AACD,WAHD,MAGO,IACJ,KAAKrB,KAAL,CAAW0B,UAAX,IAAyB,CAAC,KAAK1B,KAAL,CAAW0B,UAAX,CAAsBJ,KAAtB,CAA3B,IACA,KAAKtB,KAAL,KAAesB,KAFV,EAGL;AACA,iBAAKpB,SAAL;AACA,iBAAKF,KAAL,GAAasB,KAAb;AACA,iBAAKrB,QAAL,CAAcwB,QAAd,CAAuB,KAAKzB,KAA5B,EAAmC,KAAKqB,kBAAxC;AACD,WAPM,MAOA;AAGR;AA3F2C;AAAA;AAAA,eAwH5C,kBAAS;AACP,cAAMtC,kBAAkB,GACtBO,QAAQ,CAACqC,kBAAT,IACArC,QAAQ,CAACsC,cADT,IAEApE,aAFA,IAGA,KAAKR,QAAL,KAAkB,UAJpB;;AAMA,cAAM8B,IAAI,sBAAQ,KAAKyB,KAAb,CAAV;;AAEA,8BACE7B,wCAAC,mBAAD;AACE,YAAA,WAAW,EAAE,KAAKmD,WADpB;AAEE,YAAA,IAAI,EAAE,KAAK7E,QAAL,KAAkB,UAAlB,GAA+B,IAA/B,GAAsC8B,IAF9C;AAGE,YAAA,kBAAkB,EAAEC;AAHtB,aAIM,KAAKd,KAJX,EADF;AAQD;AAzI2C;;AAAA;AAAA,MAGbS,yBAAK,CAACP,SAHO;;AAAA,oBAGxC2B,kBAHwC,kCAIbpC,cAAc,CAACC,gBAAD,CAJD;;AA4I9CmC,IAAAA,kBAAkB,CAACnC,gBAAnB,GAAsCA,gBAAtC;AAEA,WAAOmC,kBAAP;AACD,GA/ID;AAgJD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAR,QAAQ,CAACqC,kBAAT,GAA8B,KAA9B;AAEA;AACA;AACA;AACA;;AACArC,QAAQ,CAACsC,cAAT,GAA0B,KAA1B;;;;;;ICrTqBE;;;;;AAMnB,kBAAY7D,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,sEA4BD,UAACsB,MAAD,EAAY;AAC5B,YAAKwC,SAAL,GAAiBzC,QAAQ,CAACC,MAAD,CAAR,CAAiB;AAAA,YAAGrB,QAAH,QAAGA,QAAH;AAAA,eAAkBA,QAAlB;AAAA,OAAjB,CAAjB;AACD,KA9BkB;;AAAA,6DAgCV,UAACY,IAAD;AAAA,aAAU,MAAK0B,QAAL,CAAc;AAAE1B,QAAAA,IAAI,EAAJA;AAAF,OAAd,CAAV;AAAA,KAhCU;;AAEjB,IAA8Cb,KAA9C,CAAQC,QAAR;AAAA,QAA8CD,KAA9C,CAAkB+D,MAAlB;AAAA,YAA6BC,YAA7B,4BAA8ChE,KAA9C;;AACA,UAAKiE,eAAL,CAAqBD,YAArB;;AACA,UAAK1B,KAAL,GAAa;AACXzB,MAAAA,IAAI,EAAE;AACJN,QAAAA,KAAK,EAAEuB,SADH;AAEJtB,QAAAA,MAAM,EAAEsB;AAFJ;AADK,KAAb;AAJiB;AAUlB;;;;WAED,4BAAmBoC,SAAnB,EAA8B;AAC5B,wBAII,KAAKlE,KAJT;AAAA,sBACEC,QADF;AAAA,sBAEE8D,MAFF;AAAA,cAGKI,mBAHL;;AAKA,MAIID,SAJJ,CACEjE,QADF;AAAA,UAIIiE,SAJJ,CAEEH,MAFF;AAAA,cAGKK,gBAHL,4BAIIF,SAJJ;;AAKA,UAAI,CAACG,kCAAc,CAACF,mBAAD,EAAsBC,gBAAtB,CAAnB,EAA4D;AAC1D,aAAKH,eAAL,CAAqBE,mBAArB;AACD;AACF;;;WAQD,kBAAS;AACP,UAAQL,SAAR,GAAsB,IAAtB,CAAQA,SAAR;AACA,UAAMC,MAAM,GAAG,KAAK/D,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAW+D,MAAjD;AACA,0BACEtD,wCAAC,SAAD;AAAW,QAAA,MAAM,EAAE,KAAKM;AAAxB,SACGgD,MAAM,CAAC;AAAElD,QAAAA,IAAI,EAAE,KAAKyB,KAAL,CAAWzB;AAAnB,OAAD,CADT,CADF;AAKD;;;;EAhDiCX;;gBAAf2D,wBACG;AACpB5D,EAAAA,QAAQ,EAAE6B,SADU;AAEpBiC,EAAAA,MAAM,EAAEjC;AAFY;;ACJxBT,QAAQ,CAACwC,MAAT,GAAkBA,MAAlB;AACAxC,QAAQ,CAACA,QAAT,GAAoBA,QAApB;;;;"}